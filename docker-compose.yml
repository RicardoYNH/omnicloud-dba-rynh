# docker-compose.yml

services:
  postgres:
    image: postgres:11
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_postgres.sql:/docker-entrypoint-initdb.d/init_postgres.sql
      - ./queries.sql:/queries.sql
      - backups:/backups
    ports:
      - "5432:5432"

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_HOST: mongodb
    volumes:
      - mongo_data:/data/db
      - ./init_mongo.js:/docker-entrypoint-initdb.d/init_mongo.js
      - backups:/backups
    ports:
      - "27017:27017"

  etl_pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: etl_pipeline
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - backups:/backups
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - POSTGRES_DB=db
      - POSTGRES_HOST=postgres_db
      - POSTGRES_PORT=5432
      - MONGO_HOST=mongodb
    depends_on:
    - postgres
    - mongodb

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes # Se omite autenticacion para simplificar la demostracion en el ejercicio

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  mongo_data:
  elastic_data:
  backups:
    driver: local
  
